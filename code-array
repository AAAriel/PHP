#array
//有三種方法可以建立多元陣列
1.直接賦值
EX：$s[0][0] = 78;
    $s[0][1] = 85;
    $s[0][2] = 90;
  除了直接用索引鍵代表外，亦可以文字串來表示，這樣會更清楚
EX：$s['學生一']['國文'] = 78;
    $s['學生一']['英文'] = 85;
    $s['學生一']['數學'] = 90;
2.使用array()函式
Ex：$s = array(array(78,85,90),array(62,75,98),array(95,76,82));
//因為沒有設定索引鍵，所以預設由0開始，若要調出第二個學生的國文成績
echo $s[1][0];
#foreach
foreach(陣列名稱 as 自訂變數名稱)
{
    執行的程式內容;
}
//doreach會使用陣列內的陣列元素個數做為執行次數，依序執行完畢才會結束迴圈或往下執行
//也可以用for迴圈來達成，但最重要的是for不會取得陣列的元素長度，此時可以搭配count()來取的需執行的次數
Ex：
<?php
$season = array('春', '夏', '秋', '冬'); 
$aNum = count($season);
echo "每年的四季分別為：";
for($i=0;$i<$aNum;$i++)
{
	echo $season[$i];
}
?>
#陣列相關函式應用
1.print_r(變數)→可顯示指定陣列或物件內容，只能指定一個變數
2.car_dump(變數1[,變數2][...變數n])→可以顯示指定的陣列或物件的資料型別、大小及內容，且能指定多個變數
3.array_merge(陣列1,陣列2,...陣列n)
$ testArray1 = array("A"=>"甲","B"=>"乙","C"=>"丙");
$ testArray2 = array("C"=>"丁","D"=>"戊","E"=>"己");
$ testArray3 = array_merge($testArray1,$ testArray2);
print_r($ testArray3);//顯示「Array([A]=>甲[B]=>乙[C]=>丁[D]=>戊[E]=>己)」→由於兩個陣列都有索引鍵「C」，但合併後值為丁
若要相同所以值不被合併，且兩個內容值都顯示出，要用另一函式：
4.array_merge_recursive(陣列1,陣列2,...陣列n)
$ testArray1 = array("A"=>"甲","B"=>"乙","C"=>"丙");
$ testArray2 = array("C"=>"丁","D"=>"戊","E"=>"己");
$ testArray3 = array_merge_recursive($testArray1,$ testArray2);
print_r($ testArray3);//顯示「Array([A]=>甲[B]=>乙[C]=>Array([0]=>丙 [1]=>丁)[D]=>戊[E]=>己)」→由於兩個陣列都有索引鍵「C」，但合併後值唯一多維陣列

陣列的相關應用還有很多，像array_chunk()、array_combine()、compact()等
#指派陣列元素成為變數

1.list($變數1,$變數2,...變數n)=陣列
$testArray = array("甲","乙","丙");
list($a,$b,$c) = $testArray;//顯示$a=甲,$b=乙,$c=丙
list($a,$b) = $testArray;//顯示$a=甲,$b=乙
list($a,,$b) = $testArray;//顯示$a=甲,$b丙

2.each()→當遇到字串設定索引鍵的結合式陣列時，list()只能設定兩個變數來取得索引鍵及值，並搭配each()來取的所有陣列內容
$testArray = array("A"=>"甲","B"=>"乙","C"=>"丙");
while(list($a,$b) = each($testArray))
{
echo "$a的值為$b";
}
在while迴圈每執行一次,陣列的紀錄指標及往下一筆移動,並將索引鍵與值代入list(),ˊ達資料底端時會回傳邏輯值False即跳出迴圈,陣列記錄指標會停留在最後一筆。
list()搭配each()跳出迴圈後,若要將指標返回陣列頂端,可使用reset($陣列)回到第一筆。
